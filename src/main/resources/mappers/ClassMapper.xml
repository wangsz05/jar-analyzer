<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2023-2024 4ra1n (Jar Analyzer Team)
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.n1ar4.jar.analyzer.core.mapper.ClassMapper">
    <resultMap id="classMap" type="me.n1ar4.jar.analyzer.entity.ClassResult">
        <result column="class_name" property="className"/>
        <result column="super_class_name" property="superClassName"/>
        <result column="jar_name" property="jarName"/>
        <result column="is_interface" property="isInterfaceInt"/>
    </resultMap>
    <insert id="insertClass" parameterType="ClassEntity">
        INSERT INTO class_table
        (jar_name, class_name, super_class_name, is_interface)
        VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.jarName}, #{item.className}, #{item.superClassName}, #{item.isInterface})
        </foreach>
    </insert>
    <select id="selectClassByClassName" resultMap="classMap">
        SELECT DISTINCT c.class_name,
                        c.super_class_name,
                        c.jar_name,
                        c.is_interface
        FROM class_table c
        WHERE c.class_name = #{className}
    </select>
    <!-- 这个方法写的比较抽象 -->
    <!-- 因为要兼容之前的版本 且避免在 JAVA 层消耗过高 -->
    <!-- 本质是 查 CLASS 全名里面是否包含了某个字符串 -->
    <select id="includeClassByClassName">
        SELECT c.class_name
        FROM class_table c
        WHERE c.class_name LIKE '%${className}%'
          AND INSTR(REVERSE(c.class_name), '/') > INSTR(REVERSE(c.class_name), REVERSE('${className}'))
    </select>
    <select id="selectSuperClassesByClassName">
        SELECT DISTINCT c.super_class_name
        FROM class_table c
        WHERE c.class_name = #{className}
    </select>
    <select id="selectSubClassesByClassName">
        SELECT DISTINCT c.class_name
        FROM class_table c
        WHERE c.super_class_name = #{className}
    </select>
    <select id="selectJarByClass">
        SELECT DISTINCT jar_name
        FROM class_table
        WHERE class_name = #{className}
    </select>
</mapper>
