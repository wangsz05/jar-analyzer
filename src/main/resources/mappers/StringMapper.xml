<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2023-2024 4ra1n (Jar Analyzer Team)
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.n1ar4.jar.analyzer.core.mapper.StringMapper">
    <resultMap id="methodMap" type="me.n1ar4.jar.analyzer.entity.MethodResult">
        <result column="jar_name" property="jarName"/>
        <result column="method_name" property="methodName"/>
        <result column="class_name" property="className"/>
        <result column="method_desc" property="methodDesc"/>
        <result column="is_static" property="isStaticInt"/>
        <result column="access" property="accessInt"/>
    </resultMap>
    <insert id="insertString" parameterType="StringEntity">
        INSERT INTO string_table
        (method_name, method_desc, access, class_name, value, jar_name)
        VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.methodName}, #{item.methodDesc}, #{item.access}, #{item.className}, #{item.value}, #{item.jarName})
        </foreach>
    </insert>
    <select id="selectMethodByString" resultMap="methodMap">
        SELECT DISTINCT cf.jar_name, m.method_name, m.class_name, m.method_desc, m.is_static, m.access
        FROM method_table m
                 INNER JOIN class_file_table cf ON
            substr(cf.class_name, 1, length(cf.class_name) - 6) = m.class_name
                 INNER JOIN string_table s ON
            s.class_name = m.class_name
                AND
            s.method_name = m.method_name
                AND
            s.method_desc = m.method_desc
        WHERE s.value LIKE CONCAT('%', #{value}, '%')
    </select>
    <select id="selectStrings">
        SELECT DISTINCT s.value
        FROM string_table s
        ORDER BY value COLLATE NOCASE LIMIT 100
        OFFSET #{offset}
    </select>
    <select id="selectCount">
        SELECT COUNT(DISTINCT s.value)
        FROM string_table s;
    </select>
</mapper>